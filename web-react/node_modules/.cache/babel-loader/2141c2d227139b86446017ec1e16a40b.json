{"ast":null,"code":"var _jsxFileName = \"/Users/wangtangni/Desktop/personal-website/src/components/contact.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      console.log(event);\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      disabled: \"\",\n      emailSent: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Contact\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      htmlFor: \"full-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Full Name\"), React.createElement(Form.Control, {\n      id: \"full-name\",\n      name: \"name\",\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Control, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      htmlFor: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"message\"), React.createElement(Form.Control, {\n      id: \"message\",\n      name: \"message\",\n      as: \"textarea\",\n      rows: \"3\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"d-inline-block\",\n      variant: \"primary\",\n      type: \"submit\",\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Send\"), this.state.emailSent === true && React.createElement(\"p\", {\n      className: \"d-inline success-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Email Sent\"), this.state.emailSent === false && React.createElement(\"p\", {\n      className: \"d-inline err-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Email Not Sent\")));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/Users/wangtangni/Desktop/personal-website/src/components/contact.js"],"names":["React","Component","Form","Button","Contact","constructor","props","handleChange","event","console","log","target","value","type","checked","state","name","email","message","disabled","emailSent","render","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      disabled: \"\",\n      emailSent: null\n    };\n  }\n\n  handleChange = event => {\n    console.log(event);\n\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n  };\n  render() {\n    return (\n      <div>\n        <h1>Contact</h1>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label htmlFor=\"full-name\">Full Name</Form.Label>\n            <Form.Control\n              id=\"full-name\"\n              name=\"name\"\n              type=\"text\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"email\">Email</Form.Label>\n            <Form.Control\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"message\">message</Form.Label>\n            <Form.Control\n              id=\"message\"\n              name=\"message\"\n              as=\"textarea\"\n              rows=\"3\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button\n            className=\"d-inline-block\"\n            variant=\"primary\"\n            type=\"submit\"\n            disabled={this.state.disabled}\n          >\n            Send\n          </Button>\n          {this.state.emailSent === true && (\n            <p className=\"d-inline success-msg\">Email Sent</p>\n          )}\n          {this.state.emailSent === false && (\n            <p className=\"d-inline err-msg\">Email Not Sent</p>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}